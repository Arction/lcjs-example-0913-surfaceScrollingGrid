(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,l)=>{const a=l(809),{lightningChart:s,LUT:n,ColorHSV:o,PalettedFill:r,emptyLine:i,AxisScrollStrategies:c,AxisTickStrategies:u,Themes:m}=a,d=1e3/35,h=s().Dashboard({numberOfColumns:2,numberOfRows:2}).setRowHeight(0,1).setRowHeight(1,2);let g=h.addUIElement().setText("Loading example data ...");fetch(document.head.baseURI+"examples/assets/0913/audio2ch.json").then((e=>e.json())).then((e=>{g.dispose(),g=void 0;const t=new n({steps:[{value:0,color:o(0,1,0),label:"-100"},{value:42.5,color:o(270,.84,.2),label:"-88"},{value:85,color:o(289,.86,.35),label:"-77"},{value:127.5,color:o(324,.97,.56),label:"-65"},{value:170,color:o(1,1,1),label:"-53"},{value:212.5,color:o(44,.64,1),label:"-42"},{value:255,color:o(62,.32,1),label:"-30"}],units:"dB",interpolate:!0});let l=[{name:"Channel 1",data:e.ch1,columnIndex:0},{name:"Channel 2",data:e.ch2,columnIndex:1}];l=l.map((e=>{const l=e.data[0].length,a=h.createChartXY({columnIndex:e.columnIndex,rowIndex:0}).setTitle(`${e.name} | 2D audio spectrogram`);a.getDefaultAxisX().setTickStrategy(u.Time).setScrollStrategy(c.progressive).setInterval(-27e3,0),a.getDefaultAxisY().setTitle("Frequency (Hz)");const s=h.createChart3D({columnIndex:e.columnIndex,rowIndex:1}).setTitle(`${e.name} | 3D audio spectrogram`);s.getDefaultAxisX().setTickStrategy(u.Time).setScrollStrategy(c.progressive).setInterval(-27e3,0),s.getDefaultAxisY().setTitle("Intensity (Db)").setTickStrategy(u.Numeric,(e=>e.setFormattingFunction((e=>{return(t=e,t/255*70-100).toFixed(0);var t})))),s.getDefaultAxisZ().setTitle("Frequency (Hz)");const n=a.addHeatmapScrollingGridSeries({scrollDimension:"columns",resolution:l,step:{x:d,y:40}}).setFillStyle(new r({lut:t})).setWireframeStyle(i).setDataCleaning({maxDataPointCount:1e4}),o=s.addSurfaceScrollingGridSeries({scrollDimension:"columns",columns:Math.ceil(945),rows:l,step:{x:d,z:40}}).setFillStyle(new r({lut:t,lookUpProperty:"y"})).setWireframeStyle(i);return{...e,chart2D:a,chart3D:s,heatmapSeries2D:n,surfaceSeries3D:o}}));let a,s=0;setInterval((()=>{const e=l.map((e=>e.data[s%e.data.length]));s+=1,p(e,(e=>{l.forEach(((t,l)=>{t.heatmapSeries2D.addIntensityValues([e[l]]),t.surfaceSeries3D.addValues({yValues:[e[l]]})}))}))}),d);let m=0;const p=(e,t)=>{const l=performance.now();if(void 0===a)return t(e),a={sample:e,time:l,i:0},void(m=l);let s=a.i+1,n=m+s*d,o=n-14.285714285714286,r=n+14.285714285714286;if(!(l<o)){if(l>r){let i=0;do{t(a.sample),i+=1,s+=1,n=m+s*d,o=n-14.285714285714286,r=n+14.285714285714286}while(l>r);return t(e),void(a={sample:e,time:l,i:s})}t(e),a={sample:e,time:l,i:s}}}}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);